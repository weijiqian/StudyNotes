<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.shawntime.common"/>

    <context:annotation-config/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--aop性能拦截-->
    <bean id="elapseInterceptor" class="com.shawntime.common.web.springmvc.interceptors.ElapseInterceptor" scope="singleton">
        <!--isOpen表示是否打开性能日志记录-->
        <property name="isOpen" value="true"/>
    </bean>
    <aop:config proxy-target-class="true">
        <aop:aspect ref="elapseInterceptor">
            <aop:around method="around"
                        pointcut="execution(* com.shawntime.service*(..)) or execution(* com.shawntime.dao*(..))"/>
        </aop:aspect>
    </aop:config>

    <!--输入参数忽略大小写-->
    <bean id="caseInsensitiveRequestFilterProxy" class="org.springframework.web.filter.DelegatingFilterProxy">
        <property name="targetBeanName" value="caseInsensitiveRequestFilter"/>
    </bean>
    <bean id="caseInsensitiveRequestFilter"
          class="com.shawntime.common.web.filters.CaseInsensitiveRequestFilter">
    </bean>

    <!--自定义扩展 log4j layout 输出-->
    <bean id="log4jMDCFilterProxy" class="org.springframework.web.filter.DelegatingFilterProxy">
        <property name="targetBeanName" value="log4jMDCFilter"/>
    </bean>
    <bean id="log4jMDCFilter"
          class="com.shawntime.common.web.filters.Log4jMDCFilter">
    </bean>

    <!-- redis连接池的配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="20"/>
        <property name="minIdle" value="5"/>
        <property name="blockWhenExhausted" value="true" />
        <property name="maxWaitMillis" value="30000" />
        <property name="testOnBorrow" value="true" />
    </bean>

    <!-- redis的连接池pool，不是必选项：timeout/password  -->
    <bean id = "managerJedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.ip}"/>
        <constructor-arg index="2" value="${redis.port}" type="int"/>
        <constructor-arg index="3" value="500" type="int"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.ip}" />
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="usePool" value="true"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
    </bean>

</beans>